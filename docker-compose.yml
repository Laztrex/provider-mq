version: '3.6'

networks:
  rabbitmq-example:
    driver: bridge

services:

  rabbitmq:
    build: examples/rabbit-mq
    container_name: rabbitmq
    networks:
      - rabbitmq-example
    volumes:
      - "./examples/rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro"
      - "./examples/certs/rabbitmq:/certs/rabbitmq:ro"
    ports:
      - "127.0.0.1:8008:15672"  # UI
      - "5673:5673"
      - "5671:5671"  # For TLS
      - "127.0.0.1:15692:15692"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"] # test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  provider_mq:
    build: .
    container_name: provider-mq
    ports:
      - "127.0.0.1:5051:5051" # Port for healthcheck
    networks:
      - rabbitmq-example
    depends_on:
      - rabbitmq
    restart: on-failure
    environment: # Sample env variables for provider_mq
      LOG_LEVEL: "debug"

      RMQ_URL: "amqps://superuser:superpassword@rabbitmq:5671/"  # "amqps://user:pass@rabbitmq:5671/"
      MODEL_HOST: "webapp"
      MODEL_PORT: 8080

    volumes:
      - "./examples/certs/provider_mq:/certs/provider_mq:ro"

  webapp:
    build: examples/webapp
    container_name: model-app
    networks:
      - rabbitmq-example
    depends_on:
      - rabbitmq
      - provider_mq
    working_dir: /webapp
    restart: on-failure
    volumes:
      - ${PWD}/tests:/tests
      - ./:/framework
      - "./examples/certs/webapp:/certs/webapp:ro"
    environment:
      CAFILE: "/certs/webapp/cacert.pem"
      CERTFILE: "/certs/webapp/client_cert.pem"
      CERTKEY: "/certs/webapp/client_key.pem"
      LOG_PATH: /tests

      QUEUE_NAME: fib
