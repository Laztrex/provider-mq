kind: Template
apiVersion: v1
metadata:
  name: provider-mq-template
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: provider-mq
      labels:
        app: mlx
        deploy: mlx-provider-mq
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 3600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        deploy: mlx-provider-mq
      template:
        metadata:
          creationTimestamp: null
          labels:
            deploy: mlx-provider-mq
        spec:
          volumes:
            - name: ml-log
              emptyDir: {}
            - name: tmp-dir
              emptyDir: {}
            - name: queue-config
              configMap:
                name: queue-config
                items:
                  - key: queue_config.yaml
                    path: queue_config.yaml
                defaultMode: 420
                optional: false
            - name: provider-mq-certs
              secret:
                secretName: provider-mq-certs
                items:
                  - key: crt.pem
                    path: client_cert.pem
                  - key: key.pem
                    path: client_key.pem
                  - key: cacert.pem
                    path: cacert.pem
                defaultMode: 288
          containers:
            - resources:
                limits:
                  cpu: '2'
                  memory: 3000Mi
                requests:
                  cpu: '1'
                  memory: 2000Mi
              readinessProbe:
                httpGet:
                  path: /health
                  port: 5080
                  scheme: HTTP
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: /dev/termination-log
              name: provider-mq
              livenessProbe:
                httpGet:
                  path: /health
                  port: 5080
                  scheme: HTTP
                initialDelaySeconds: 300
                timeoutSeconds: 1
                periodSeconds: 60
                successThreshold: 1
                failureThreshold: 10
              env:
                - name: APPLICATION_NAME
                  value: ${NAME_PROJECT}
                - name: PROJECT_NAME
                  value: ${NAME_MODEL}
                - name: LOG_LEVEL
                  value: debug
                - name: MQ_ADMIN_USER
                  valueFrom:
                    secretKeyRef:
                      name: rabbitmq-admin
                      key: user
                - name: MQ_ADMIN_PASS
                  valueFrom:
                    secretKeyRef:
                      name: rabbitmq-admin
                      key: pass
                - name: RMQ_URL
                  # amqps://$(MQ_ADMIN_USER):$(MQ_ADMIN_PASS)@rabbitmq-headless.$(PROJECT_NAME).svc.cluster.local:5671/
                  value: >-
                    amqps://$(MQ_ADMIN_USER):$(MQ_ADMIN_PASS)@${RMQ_HOST}:${RMQ_PORT}/
                - name: MODEL_HOST_ENV
                  value: $(APPLICATION_NAME)_$(PROJECT_NAME)_SERVICE_HOST
              securityContext:
                readOnlyRootFilesystem: false
              imagePullPolicy: Always
              ports:
                - name: mq
                  containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - name: ml-log
                  mountPath: /var/log
                - name: tmp-dir
                  mountPath: /tmp/nginx
                - name: provider-mq-certs
                  readOnly: true
                  mountPath: /certs/provider_mq
                - name: queue-config
                  mountPath: /go/src/provider_mq/configs/queue_config.yaml
                  subPath: queue_config.yaml
              terminationMessagePolicy: File
              image: >-
                ${IMAGE_PROVIDER_MQ}
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          automountServiceAccountToken: false
          securityContext: {}
          schedulerName: default-scheduler

parameters:
  - name: IMAGE_PROVIDER_MQ
    required: true
  - name: RMQ_HOST
    required: true
  - name: RMQ_PORT
    required: true
  - name: NAME_PROJECT
    required: true
  - name: NAME_MODEL
    required: true